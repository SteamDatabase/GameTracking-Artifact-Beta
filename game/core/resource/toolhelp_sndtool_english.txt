"lang"
{
	"Tokens"
	{
		"SndToolAppHelp"		"Sound Tool Help"
		"SndToolAppHelp:help"		"Enter an explanation of how this tool works here..."
		"Stack hlvr_default_3d"		"HLVR Default 3D"
		"Stack hlvr_default_3d:shorthelp"		"For basic positional sounds."
		"Stack hlvr_default_3d:help"		"Use this stack definition for all standard \"3d\" positional sounds."
		"SndToolGroupEditor:help"		"Core sound event groups are for testing only and do not represent actual usage cases."

		//sound event editor documentation for various common sound operator stack fields.
		//See also https://confluence.valve.org/display/source2/Common+and+Reserved+Parameters
		"Attribute.type"		"The type of the sound event. This corresponds with the operator stack it will use."
		"Attribute.CustomStack"		"If set, this sound event will use the operator stack editor to generate its stack. Use Edit -> Operator Stack Editor to use the operator stack editor to control this sound event's behavior."

		"Attribute.preloadvsnds"	"A list of vsnd resources to preload so this sound event can be played without any delay."


		"Attribute.public.delay"	"Is almost always plumbed into the delay field of the operator that starts the vsnd."


		"Attribute.public.volume_mult"	"Volume multiplier that is set by code or entities and is not intended to be set on the soundevent."
		"Attribute.public.volume_atten"	"Volume multiplier that is set by code or entities and is not intended to be set on the soundevent."
		"Attribute.public.pitch_adjust"	"Pitch multiplier that is set by code or entities and is not intended to be set on the soundevent."

		"Attribute.public.vsnd_files"	"An array of string paths to the vsnd files to be selected from."

		"Attribute.public.vsnd_selection_type"	"The method used to select a single vsnd from the vsnd_files array when this sound event plays.

Possible selection types:

<ul>
<li><i>index</i>: Use the index number specified in <i>vsnd_selection_index</i> to select from array.</li>

<li><i>forward</i>: Sequentially selects with increasing indices. (Steps through array 'forwards')</li>

<li><i>backward</i>: Sequentially selects with decreasing indices. (Steps through array 'backwards')</li>

<li><i>random</i>: Randomly selects an index into the array every time with no regard to previous selections.</li>

<li><i>random_exclusive</i>: Randomly selects an index into the array such that no index follows itself and all indices are selected before any are repeated.</li>

<li><i>random_weighted</i>: This usage is uncommon and requires a stack that specifically supports it.</li>

</ul>"

		"Attribute.public.vsnd_selection_index"	"Index used when vsnd_selection_type is 'index' to control which vsnd from vsnd_files to play"
		"Attribute.public.position"	"This value can be set locally or passed in via code, it is passed through as 'world_position' and used when the soundevents entity index = 0 or 'use_world_position' is 'true'"
		"Attribute.public.position_offset"	"A positional offset that is added to the position the sound plays at."

		"Attribute.public.static_position"	"If 'true' or > 0.0 then the position will only be calculated on the first frame of the soundevent execution and not updated on subsequent frames."
		"Attribute.public.force_from_player"	"If 'true' or > 0.0 then the position will be 12 units directly in front of the player."
		"Attribute.public.use_world_position"	"If 'true' or > 0.0 then the values in the 'position' field will be used regardless of the entity index passed to the soundevent."
		"Attribute.public.attachment"	"The name of an attachment known to be on the entity ID being passed. This can either be specified on the soundevent or passed by the calling method."

		//volume calculations
		"Attribute.public.volume"	"This is the baseline volume level and is what is adjusted on the sound event by the artist. It may be specified in scalar or db depending on the project."
		"Attribute.public.volume_rand_min"	"Specified along with <i>volume_rand_max</i> to define a range between which a randomized selection will be made each time the sound event is played and added to the volume. In general, volume_rand_min should be negative, and volume_rand_max should be positive."
		"Attribute.public.volume_rand_max"	"Specified along with <i>volume_rand_min</i> to define a range between which a randomized selection will be made each time the sound event is played and added to the volume. In general, volume_rand_min should be negative, and volume_rand_max should be positive."
		"Attribute.public.volume_fade_in"	"Specified as a time over which volume will be scaled from 0.0 to 1.0."
		"Attribute.public.volume_fade_out"	"Specified as a time over which volume will be scaled from 1.0 to 0.0."
		"Attribute.public.volume_fade_over_time_curve"	"Specifies a volume attenuation curve that follows from soundevent start time. Used for inner soundevent volume changes."
		"Attribute.public.volume_filter_amount"	"This specifies the maximum amount the overall volume can change in 1.0 second. High values generally cause little change, lower values slow down the speed of volume level changes. This is mostly used when sudden changes such as VR teleport cause large jumps in volume level."
		"Attribute.public.block_volume_atten"	"A 'true' or non 0.0 value specifies to not allow external alteration of volume via the 'volume_atten' parameter."
		"Attribute.public.pitch"	"This is the baseline pitch multiplier. 1.0 = Unaltered pitch."
		"Attribute.public.pitch_rand_min"	"<i>pitch_rand_min</i> and <i>pitch_rand_max</i> are specified as minimum and maximum values between which a randomized selection will be made and then added to the 'pitch' value.

Generally speaking the minimum value will be a negative value and maximum a positive one."
		"Attribute.public.pitch_rand_max"	"<i>pitch_rand_min</i> and <i>pitch_rand_max</i> are specified as minimum and maximum values between which a randomized selection will be made and then added to the 'pitch' value.

Generally speaking the minimum value will be a negative value and maximum a positive one."

		"Attribute.public.pitch_adjust"	"This is a pitch multiplier that is set by code or entities and <i>is not intended to be set on the soundevent</i>."


		//Occlusion
		"Attribute.public.occlusion_scale"	"The amount of occlusion to calculate and apply. A 0.0 value indicates no occlusion testing and an guaranteed output of 1.0 (no occlusion). As the value moves towards 1.0 the results of the testing are inversely scaled towards the possibility of full occlusion of 0.0."

		"Attribute.public.occlusion_min"	"Specifies the minimum possible resulting 'unoccluded' value. A number > 0.0 means that a sound source will never be 100% occluded and that percentage goes down as this number goes up."

		"Attribute.public.occlusion_max"	"Specifies the maximum possible resulting 'unoccluded' value. A number less than 1.0 means that the soundevent will always be 1.0 - 'occlusion_max' occluded."

		"Attribute.public.occlusion_max_velocity"	"This is a velocity filter applied to the result of the occlusion test that limits the rate per second at which that result can change. Low numbers result in a slower, smoother and potentially delayed change. Higher numbers result in faster, potentially abrupt changes."

		"Attribute.public.occlusion_interval"	"Time specified in seconds between ray tracing tests to determine a change in occlusion state."

		//Falloff

		"Attribute.public.volume_falloff_min"	"The distance at which a soundevents volume is not attenuated at all."

		"Attribute.public.volume_falloff_max"	"The distance at which a soundevents volume is attenuated to the level set by .volume_falloff_floor."
		"Attribute.public.volume_falloff_floor"	"The minimum attenuation value output when the soundevent is at 'volume_falloff_max' distance."
		"Attribute.public.volume_falloff_atten"	"The minimum attenuation value output when the soundevent is at 'volume_falloff_max' distance."

		"Attribute.public.volume_falloff_curve_amount"	"This specifies how much of an exponential curve is used on the distance calculation. A value of 1.0 = full curve, value of 0.0 = linear curve."

		//Distance-based spread
		"Attribute.public.spread_min"	"The distance at which a soundevent fills non-spatial speakers with the maximum volume level specified in 'spread_max_level'"
		"Attribute.public.spread_max"	"The distance at which a soundevent fills non-spatial speakers with the minimum volume level specified in 'spread_min_level'"
		"Attribute.public.spread_max_value"	"The maximum value a speaker level will be set to via the spread mechanism."
		"Attribute.public.spread_min_value"	"The minimum value a speaker level will be set to via the spread mechanism."

		//Limiting
		"Attribute.public.limiter_on"	"Non- 0.0 or 'false' value does not execute the operation, otherwise it does execute. Typically only on the first execution of the soundevent. "

		"Attribute.public.limiter_match_event"	"If this is 'true' or > 0.0, the soundevent name must match this soundevents name exactly to match. ie: it must be this same soundevent."

		"Attribute.public.limiter_event_name"	"If a string is specified the soundevent name must be matched exactly in the case of 'limiter_match_event' or partially in the case of 'limiter_match_substring'"

		"Attribute.public.limiter_match_substring"	"If this is 'true' or > 0.0, the soundevent name only has to have 'limiter_event_name' as a substring to match."

		"Attribute.public.limiter_match_entity"	"If this is 'true' or > 0.0, the entity index associated with the soundevents must match the entity associated with this soundevent."

		"Attribute.public.limiter_match_type"	"If this value is > -1.0 then it represents the 'event_type' (see Reserved Parameter Fields) that the soundevent must have to match."

		"Attribute.public.limiter_match_event_duration"	"If this value is > -1.0 then the soundevents duration must be greater than or equal to the duration specified to match."

		"Attribute.public.limiter_max"	"Specifies the maximum number of matching soundevents allowed. More matching soundevents will result in them being stopped to match this number."

		"Attribute.public.limiter_stop_oldest"	"If this is 'true' or > 0.0 and the number of matched soundevents is greater than 'limiter_max', the oldest (most time elapsed) soundevents are stopped first."

		

		//Blocking

		"Attribute.public.block_event_name"	"The soundevent name to be blocked or a substring of the soundevents to be blocked if 'block_match_substring' is true."

		"Attribute.public.block_match_this_event"	"Block other instantiations of this soundevent."

		"Attribute.public.block_match_substring"	"Soundevent with names containing 'block_event_name' will match."

		"Attribute.public.block_match_entity"	"0 = don't match entity, 1 = do match the entity of this soundevent"

		"Attribute.public.block_distance"	"Specifies the distance from the blocking soundevent within which to match soundevents."

		"Attribute.public.block_duration"	"A specific time duration to block for."

		"Attribute.public.block_is_untimed"	"Only block for the time this soundevent is running. ie: ignore duration"

		"Attribute.public.block_test"	"Allow this soundevent to be blocked by others"

		"Attribute.public.block_execute"	"Activate blocking of other soundevents."



	}
}
