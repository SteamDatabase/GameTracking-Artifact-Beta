"lang"
{
	"Tokens"
	{
		"attr.CVDataEditorNode._class:shorthelp"		"Entity Designer Name"
		"attr.CVDataEditorNode._class:help"		"The designer name of the entity associated with this subclass [the same name Hammer would use to place this entity]."
		"attr.CVDataEditorNode._base:name_ref"		"Base"
		"attr.CVDataEditorNode._base:help"		"Specifies the name of another VData block that this VData block will inherit keys from.
<br><br>
To override keys, click on the pencil control, which will allow you to specify a different value from the base VData block for this VData block. To <b>stop</b> overriding a key, clock on the X control. Note that these controls will only appear if a Base VData class is specified.
<br><br>
Note that inherited keys will be automatically updated if the base class keys are changed. Individual array elements cannot be overridden; instead you must override the entire array.

"
		"attr.CVDataEditorNode._not_pickable:name_ref"		"Not Visible In Tools"
		"attr.CVDataEditorNode._not_pickable:help"		"When checked, this prevents this VData type from being seen in pickers in tools like Hammer, or in autocompletion commands in-game that use VData types, like subclass_create or ent_create.
<br><br>
This feature is typically used in a few scenarios:
<br><br>
1) This VData type is meant to be used only as a base class for other VData types to store shared settings, but which isn't meant to be used by itself
<br>
2) This VData type is used as an implementation detail in C++ code and isn't meant to be able to be used from content authoring tools"
	}
}
